//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebGraphics.WebGeometry {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InputData", Namespace="webgeom")]
    [System.SerializableAttribute()]
    public partial class InputData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebGraphics.WebGeometry.Line[] LinesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public WebGraphics.WebGeometry.Line[] Lines {
            get {
                return this.LinesField;
            }
            set {
                if ((object.ReferenceEquals(this.LinesField, value) != true)) {
                    this.LinesField = value;
                    this.RaisePropertyChanged("Lines");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Line", Namespace="webgeom")]
    [System.SerializableAttribute()]
    public partial class Line : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebGraphics.WebGeometry.Point AField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebGraphics.WebGeometry.Point BField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public WebGraphics.WebGeometry.Point A {
            get {
                return this.AField;
            }
            set {
                if ((object.ReferenceEquals(this.AField, value) != true)) {
                    this.AField = value;
                    this.RaisePropertyChanged("A");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public WebGraphics.WebGeometry.Point B {
            get {
                return this.BField;
            }
            set {
                if ((object.ReferenceEquals(this.BField, value) != true)) {
                    this.BField = value;
                    this.RaisePropertyChanged("B");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Point", Namespace="webgeom")]
    [System.SerializableAttribute()]
    public partial class Point : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private float XField;
        
        private float YField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public float X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public float Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OutputData", Namespace="webgeom")]
    [System.SerializableAttribute()]
    public partial class OutputData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebGraphics.WebGeometry.Point InterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public WebGraphics.WebGeometry.Point Inter {
            get {
                return this.InterField;
            }
            set {
                if ((object.ReferenceEquals(this.InterField, value) != true)) {
                    this.InterField = value;
                    this.RaisePropertyChanged("Inter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="webgeom", ConfigurationName="WebGeometry.WebGeometryServiceSoap")]
    public interface WebGeometryServiceSoap {
        
        // CODEGEN: Generating message contract since element name data from namespace webgeom is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="webgeom/Intersec", ReplyAction="*")]
        WebGraphics.WebGeometry.IntersecResponse Intersec(WebGraphics.WebGeometry.IntersecRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="webgeom/Intersec", ReplyAction="*")]
        System.Threading.Tasks.Task<WebGraphics.WebGeometry.IntersecResponse> IntersecAsync(WebGraphics.WebGeometry.IntersecRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IntersecRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Intersec", Namespace="webgeom", Order=0)]
        public WebGraphics.WebGeometry.IntersecRequestBody Body;
        
        public IntersecRequest() {
        }
        
        public IntersecRequest(WebGraphics.WebGeometry.IntersecRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="webgeom")]
    public partial class IntersecRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public WebGraphics.WebGeometry.InputData data;
        
        public IntersecRequestBody() {
        }
        
        public IntersecRequestBody(WebGraphics.WebGeometry.InputData data) {
            this.data = data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class IntersecResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="IntersecResponse", Namespace="webgeom", Order=0)]
        public WebGraphics.WebGeometry.IntersecResponseBody Body;
        
        public IntersecResponse() {
        }
        
        public IntersecResponse(WebGraphics.WebGeometry.IntersecResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="webgeom")]
    public partial class IntersecResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public WebGraphics.WebGeometry.OutputData IntersecResult;
        
        public IntersecResponseBody() {
        }
        
        public IntersecResponseBody(WebGraphics.WebGeometry.OutputData IntersecResult) {
            this.IntersecResult = IntersecResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebGeometryServiceSoapChannel : WebGraphics.WebGeometry.WebGeometryServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebGeometryServiceSoapClient : System.ServiceModel.ClientBase<WebGraphics.WebGeometry.WebGeometryServiceSoap>, WebGraphics.WebGeometry.WebGeometryServiceSoap {
        
        public WebGeometryServiceSoapClient() {
        }
        
        public WebGeometryServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebGeometryServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebGeometryServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebGeometryServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebGraphics.WebGeometry.IntersecResponse WebGraphics.WebGeometry.WebGeometryServiceSoap.Intersec(WebGraphics.WebGeometry.IntersecRequest request) {
            return base.Channel.Intersec(request);
        }
        
        public WebGraphics.WebGeometry.OutputData Intersec(WebGraphics.WebGeometry.InputData data) {
            WebGraphics.WebGeometry.IntersecRequest inValue = new WebGraphics.WebGeometry.IntersecRequest();
            inValue.Body = new WebGraphics.WebGeometry.IntersecRequestBody();
            inValue.Body.data = data;
            WebGraphics.WebGeometry.IntersecResponse retVal = ((WebGraphics.WebGeometry.WebGeometryServiceSoap)(this)).Intersec(inValue);
            return retVal.Body.IntersecResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WebGraphics.WebGeometry.IntersecResponse> WebGraphics.WebGeometry.WebGeometryServiceSoap.IntersecAsync(WebGraphics.WebGeometry.IntersecRequest request) {
            return base.Channel.IntersecAsync(request);
        }
        
        public System.Threading.Tasks.Task<WebGraphics.WebGeometry.IntersecResponse> IntersecAsync(WebGraphics.WebGeometry.InputData data) {
            WebGraphics.WebGeometry.IntersecRequest inValue = new WebGraphics.WebGeometry.IntersecRequest();
            inValue.Body = new WebGraphics.WebGeometry.IntersecRequestBody();
            inValue.Body.data = data;
            return ((WebGraphics.WebGeometry.WebGeometryServiceSoap)(this)).IntersecAsync(inValue);
        }
    }
}
